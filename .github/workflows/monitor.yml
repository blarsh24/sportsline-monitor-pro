name: SportsLine Monitor

on:
  schedule:
    # Midnight EST (5 AM UTC) - Send all LIVE picks
    - cron: '0 5 * * *'
    
    # Every hour from 6 AM to 11 PM EST (11 AM to 4 AM UTC) - Check for NEW picks
    - cron: '0 11-23,0-4 * * *'
  
  workflow_dispatch:  # Manual trigger
    inputs:
      force_midnight:
        description: 'Force midnight mode (send all LIVE picks)'
        required: false
        default: 'false'
        type: choice
        options:
          - 'true'
          - 'false'

jobs:
  monitor-picks:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
    
    - name: Cache pip packages
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    
    - name: Download previous state
      uses: actions/download-artifact@v4
      with:
        name: monitor-state
        path: .
      continue-on-error: true
    
    - name: Determine run type
      id: run-type
      run: |
        HOUR=$(date -u +%H)
        if [ "$HOUR" = "05" ] || [ "${{ github.event.inputs.force_midnight }}" = "true" ]; then
          echo "Running MIDNIGHT mode - will send all LIVE picks"
          echo "FORCE_MIDNIGHT=true" >> $GITHUB_ENV
        else
          echo "Running HOURLY mode - will check for NEW picks only"
          echo "FORCE_MIDNIGHT=false" >> $GITHUB_ENV
        fi
    
    - name: Run monitor
      env:
        SPORTSLINE_EMAIL: ${{ secrets.SPORTSLINE_EMAIL }}
        SPORTSLINE_PASSWORD: ${{ secrets.SPORTSLINE_PASSWORD }}
        DISCORD_WEBHOOK_URL: ${{ secrets.DISCORD_WEBHOOK_URL }}
      run: |
        echo "Starting monitor in $([ "$FORCE_MIDNIGHT" = "true" ] && echo "MIDNIGHT" || echo "HOURLY") mode..."
        python monitor.py
    
    - name: Upload state for next run
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: monitor-state
        path: |
          monitor_state.json
        retention-days: 30
    
    - name: Upload logs on failure
      uses: actions/upload-artifact@v4
      if: failure()
      with:
        name: error-logs
        path: |
          *.log
        retention-days: 3